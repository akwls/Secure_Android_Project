<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".DescActivity"
    android:orientation="vertical"
    android:padding="10dp">
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="다중 문자 치환 암호화"
        android:textColor="#000000"
        android:textSize="25sp"
        android:textStyle="bold"
        android:layout_marginBottom="10dp"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text=" 다중 문자 치환 암호화 방법은 2개 이상의 문자열을
묶어 치환하는 방법으로, 쌍자 암호를 예로 들어보자.
1854년 찰스 휘트스톤이 개발한 쌍자 암호는 1차 세
계대전 중 영국에서 사용되었다. 쌍자 암호는 두 글자
쌍을 다른 두 글자 쌍으로 대체하는 암호화 방법으로
보통 정사각형 안에 영어 알파벳을 나열하여 대체하는
방법을 사용한다.
 쌍자 암호는 키워드에서 중복 문자열을 제거한 결과
의 알파벳을 5x5 정사각형에 배열하고, 나머지 알파
벳을 차례대로 넣는다. 5x5는 25개의 칸이 만들어지고
알파벳은 26자가 있기 때문에 I와 J를 같은 칸에 넣거나
영문에서 많이 나타나지 않는 Q와 Z를 같은 칸에
넣는다. 이 암호판을 이용해 암호화하기 위해서는
먼저 평문을 2:2 맵핑이 가능하도록 만들어야 한다.
 쌍자 암호를 위해서는 중간의 띄어쓰기를 없애고,
연속으로 나타나는 문자열의 중간에 X를 넣고, 마지막
에 홀수 글자가 남을 경우 마찬가지로 X를 넣어준다.
 이렇게 만들어진 암호판을 이용하여 맵핑된 평문을
대체한다.
 복호화는 암호문과 암호판을 이용하여 반대의 문자로
대체하는 방법을 통해 수행한다. 쌍자 암호 역시 문자
의 두 글자 쌍의 문자 발생 빈도수를 이용하는 방법
으로 복호화할 수 있다. 참고로 영어 문장 중 가장 많
이 나타나는 2문자 쌍은 TH이고 그 다음은 HE이다."
        android:textColor="#000000"
        android:textSize="15sp"
        android:lineSpacingExtra="5dp"
        />

</LinearLayout>